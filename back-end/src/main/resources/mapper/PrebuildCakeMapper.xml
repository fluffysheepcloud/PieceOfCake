<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csulb.cookie.mapper.PrebuildCakeMapper">

    <resultMap id="BaseResultMap" type="com.csulb.cookie.domain.PrebuildCake">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="merchantId" column="m_id" jdbcType="INTEGER"/>
            <result property="cakeName" column="cake_name" jdbcType="VARCHAR"/>
            <result property="baseSizeId" column="base_id" jdbcType="INTEGER"/>
            <result property="baseColorId" column="base_color_id" jdbcType="INTEGER"/>
            <result property="baseFlavorId" column="base_flavor_id" jdbcType="INTEGER"/>
            <result property="frostingColorId" column="frosting_color_id" jdbcType="INTEGER"/>
            <result property="frostingFlavorId" column="frosting_flavor_id" jdbcType="INTEGER"/>
            <result property="price" column="price" jdbcType="DOUBLE"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,m_id,cake_name,
        base_id,base_color_id,base_flavor_id,
        frosting_color_id,frosting_flavor_id,price
    </sql>

    <insert id="addPrebuildCake" parameterType="com.csulb.cookie.domain.PrebuildCake" useGeneratedKeys="true">
        insert into prebuild_cake
            (id,
             m_id,
             cake_name,
             base_id,
             base_color_id,
             base_flavor_id,
             frosting_color_id,
             frosting_flavor_id,
             price)
        value
            (null,
             #{merchantId},
             #{cakeName},
             #{baseSizeId},
             #{baseColorId},
             #{baseFlavorId},
             #{baseColorId},
             #{frostingFlavorId},
             #{price}
        )
    </insert>


    <select id="getPrebuildCakesById" resultMap="select_prebuild_cakes">
        select pc.id,
               pc.cake_name,
               cb.base_size,
               bc.color,
               bf.flavor,
               fc.frosting_color,
               ff.f_flavor,
               pc.price from prebuild_cake pc
                     inner join cake_base cb on pc.base_id = cb.id
                     inner join base_color bc on pc.base_color_id = bc.id
                     inner join base_flavor bf on pc.base_flavor_id = bf.id
                     inner join frosting fc on pc.frosting_color_id = fc.id
                     inner join frosting_flavor ff on pc.frosting_flavor_id = ff.id
        where pc.m_id = #{id}
    </select>

    <resultMap id="select_prebuild_cakes" type="com.csulb.cookie.bean.PrebuildCakeBean">
        <id column="id" property="pId" jdbcType="INTEGER" />
        <result column="cake_name" property="cakeName" jdbcType="VARCHAR" />
        <result column="base_size" property="baseSize" jdbcType="INTEGER" />
        <result column="color" property="baseColor" jdbcType="VARCHAR" />
        <result column="flavor" property="baseFlavor" jdbcType="VARCHAR" />
        <result column="frosting_color" property="frostingColor" jdbcType="VARCHAR" />
        <result column="f_flavor" property="frostingFlavor" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="DOUBLE" />
        <collection property="toppings" ofType="com.csulb.cookie.domain.Toppings" select="pbToppings" column="id"/>
    </resultMap>

    <resultMap id="toppings" type="com.csulb.cookie.domain.Toppings">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="m_id" property="mId" jdbcType="INTEGER" />
        <result column="topping_name" property="name" jdbcType="VARCHAR" />
        <result column="topping_price" property="price" jdbcType="DOUBLE" />
    </resultMap>
    
    <select id="pbToppings" resultMap="toppings">
        select t.* from toppings t
            inner join prebuild_toppings pt on t.id = pt.topping_id
        where pt.prebuild_id = #{id}
    </select>

    <select id="getOneCakeById" resultMap="select_prebuild_cakes">
        select pc.id,
               pc.cake_name,
               cb.base_size,
               bc.color,
               bf.flavor,
               fc.frosting_color,
               ff.f_flavor,
               pc.price from prebuild_cake pc
                     inner join cake_base cb on pc.base_id = cb.id
                     inner join base_color bc on pc.base_color_id = bc.id
                     inner join base_flavor bf on pc.base_flavor_id = bf.id
                     inner join frosting fc on pc.frosting_color_id = fc.id
                     inner join frosting_flavor ff on pc.frosting_flavor_id = ff.id
        where pc.id = #{id}
    </select>


</mapper>
